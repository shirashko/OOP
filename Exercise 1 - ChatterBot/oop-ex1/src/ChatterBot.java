import java.util.*;

/**
 * ChatterBot is a class representing a chatbot that responds to user statements.
 * It can respond to both legal requests (starting with REQUEST_PREFIX) and illegal requests.
 * The bot generates responses using provided patterns.
 *
 * @author Shir Rashkovits
 */
class ChatterBot {
    static final String REQUEST_PREFIX = "say ";
    static final String LEGAL_REQUESTED_PLACEHOLDER = "<phrase>";
    static final String ILLEGAL_REQUEST_PLACEHOLDER = "<request>";
    Random rand = new Random(); // Used for randomizing responses.
    String[] repliesToLegalRequest; // Response patterns to legal requests.
    String[] repliesToIllegalRequest; // Response patterns to illegal requests.
    String name; // Name of the bot.

    /**
     * Constructs a ChatterBot with a specified name and response patterns.
     *
     * @param name                  The name of the ChatterBot.
     * @param repliesToLegalRequest An array of response patterns for legal requests.
     *                              It may contain appearances of LEGAL_REQUESTED_PLACEHOLDER.
     * @param repliesToIllegalRequest An array of response patterns for illegal requests.
     *                                It may contain appearances of ILLEGAL_REQUEST_PLACEHOLDER.
     */
    ChatterBot(String name, String[] repliesToLegalRequest, String[] repliesToIllegalRequest) {
        this.name = name;

        // Deep copy response patterns for safety, to prevent unexpected changes.
        this.repliesToLegalRequest = new String[repliesToLegalRequest.length];
        for (int i = 0; i < repliesToLegalRequest.length; i++) {
            this.repliesToLegalRequest[i] = repliesToLegalRequest[i];
        }
        this.repliesToIllegalRequest = new String[repliesToIllegalRequest.length];
        for (int i = 0; i < repliesToIllegalRequest.length; i++) {
            this.repliesToIllegalRequest[i] = repliesToIllegalRequest[i];
        }
    }

    /**
     * Gets the name of the ChatterBot.
     *
     * @return The name of the ChatterBot.
     */
    String getName(){
        return name;
    }

    /**
     * Generates a response to a given statement, either legal or illegal request.
     *
     * @param statement The statement to respond to.
     * @return The response generated by the ChatterBot.
     */
    String replyTo(String statement) {
        if(statement.startsWith(REQUEST_PREFIX)) {
            return respondToLegalRequest(statement);
        }
        return respondToIllegalRequest(statement);
    }

    private String respondToLegalRequest(String statement) {
        String statement_to_place = statement.replaceFirst(REQUEST_PREFIX, ""); // Remove the request prefix.
        return replacePlaceholderInARandomPattern(repliesToLegalRequest, LEGAL_REQUESTED_PLACEHOLDER, statement_to_place);
    }

    private String replacePlaceholderInARandomPattern(String[] possible_response_patterns, String place_holder, String statement_to_place) {
        int randomIndex = rand.nextInt(possible_response_patterns.length);
        String response_pattern = possible_response_patterns[randomIndex];
        return response_pattern.replaceAll(place_holder, statement_to_place);
    }

    private String respondToIllegalRequest(String statement) {
        return  replacePlaceholderInARandomPattern(repliesToIllegalRequest, ILLEGAL_REQUEST_PLACEHOLDER, statement);
    }
}
